import { mount } from "authentication/AuthenticationApp";
import React, { useRef, useEffect } from "react";
import { useHistory } from "react-router-dom";

export default ({ onSignIn }) => {
  // a referrence to an HTML element generated by React
  const reference = useRef(null);
  // 'useHistory()' ia hook which returns the copy of the history object used by the router in the Container app
  const containerHistoryObject = useHistory();

  useEffect(() => {
    const { onParentNavigate } = mount(reference.current, {
      initialPath: containerHistoryObject.location.pathname,
      // 'location' is an argument which is passed by 'history.listen' function called inside the Authentication app
      // it is an object which has information about where we are about to navigate to inside the Authentication app
      // NOTE: here we destructure the 'location' object and rename its property 'pathname' to 'nextPathname'
      onNavigate: ({ pathname: nextPathname }) => {
        const { pathname } = containerHistoryObject.location;

        // update the history object only if we want to go to a location which is different than the location where we currently are
        if (pathname !== nextPathname) {
          containerHistoryObject.push(nextPathname);
        }
      },
      onSignIn,
    });

    // "containerHistoryObject.listen" accepts an event listener which is fired when any navigation occurs inside the Container app
    containerHistoryObject.listen(onParentNavigate);
  }, []); // only run the 'useEffect' function once, when the 'AuthenticationApp' component is rendered

  return <div ref={reference} />;
};
